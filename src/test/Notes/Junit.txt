                    ##### Junit ####
------------------------------------------------------------------------------------------------------------------------
latest version of junit-->Junit 5

Feature of Junit 5-->
-----------------------------------------------------------------------------------------------------------
                    ### Junit Framework ###







------------------------------------------------------------------------------------------------------------------------
Annotation of Junit-->


@Test-->for test method
@Before-->run before every test method
@After--<run after every test method

@BeforeAll-->(junit5)-run only once for test class having test methods
@AfterAll-->(junit 5)-run only once for test clas having test methods

@BeforeClass-->(execution before all test case)-- his annotation is used if you want to execute some statements before all the test cases for e.g. test connection must be executed before all the test cases.
@AfterClass-->(Execution after all test case)--This annotation can be used if you want to execute some statements after all test cases for e.g. Releasing resources after executing all test cases.
@Ignores-->disabling some test cases during test execution.
@Test(timeout=500)-->  test execution need to be completed within some specified time.
@Test(expected=IllegalArgumentException.class)-->f you want to handle some exception during test execution. For, e.g., if you want to check whether a particular method is throwing specified exception or not.

    BeforeAll
        BeforeClass--
                -- Before
                        --@Test
                 -- After
   AfterClass
  AfterAll


   @RepeatedTest-->Junit5-new annotation is added.its used to run same test scenario with mutliple test data.
------------------------------------------------------------------------------------------------------------------------
Assertion in Junit-->Assert class having different assert methods
Hard assertion-->he program execution stops as soon as an exception occurs and thereby skipping all the next steps in the test method
                 After the assert fails, the current test is skipped and the next @Test is executed.
Soft assertion--> test execution to continue even when there is any exception encountered.
                throughout the @Test method and throws all the exceptions caught during the process with the assertAll() method.

Assert assert=new Assert();

1.assertEqual-->assertEquals compares the values of different data types, such as string, integer, double, object, etc.,
assert.assertEqual(expected,actual);

2.assertSame-->assertSame() method verifies reference of two object
assert.assertSame(Object expected,Object actual);

3.assertNotEqual--> Asserts that the expected values and the actual values are not equal.
assert.assertNotEqual(expected,actual);

4.assertTrue(condition)-->This asserts whether the given condition is true. Test case passes if it's true and fails if not.

5.assertFalse(condition)-->This asserts whether the given condition is false. Test case passes if it's false and fails if not.

6.assertNull-->
7.assertNotNull-->
-------------------------------------------------------------------------------------------------------------






------------------------------------------------------------------------------------------------------------------------



DataProvider-->
------------------------------------------------------------------------------------------------------------------------