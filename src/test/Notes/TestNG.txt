Priority-->the priority attribute tells the test automation framework the order in which to execute test cases
invocation count--> an annotation that specifies how many times a test method should be executed
disabled--> @Test(enabled=false)--
dependsOnMethods-->(dependsOnMethod="")-->list of groups that depends on method
dependOnGroups-->(dependsOnGroups="")-->list of methods that depends on group
Timeout--> (Timeout=1000)-->limit the maximum time a test method to run
@Factory-->return the object will be used by TestNG or test

Thread-count-->No.of test methods run or exceute in parallel testing.
Thread-count=5

-----------------------------------------------------------------------------------------------------

            ### Annotations ###
1.@Test-->execute as test method
2.@BeforeMethod-->execute before every test method in class
3.@AfterMethod-->execute after every test method in class
4.@BeforeClass-->exceute only once before test method in class
5.@AfterClass-->exceute only once after test method in class
6.@BeforeTest-->excute before <test> tag in testng.xml file
7.@AfterTest-->excute after<test> tag in testng.xml file
8.@AfterSuite-->excute before <suite>tag in testng.xml file
9.@BeforeSuite-->exceute after <suite> tag in testng.xml file
10.@BeforeGroup-->exceute only once before all test methods belongs to specific group
11.@AfterGroup-->excute only once after all test methods belongs to specific group
12.@parameter-->we want to set the global variables such url settings, username, password or API Keys, there are some
values which are constant in all the test cases, in such case we use the TestNG Parameters.
13.@DataProvider-->



--------------------------------------------------------------------------------------------------------
                            ### Data Provider ###

Parametrization-->
execution strategy that runs a test case automatically multiple times with various input values.
Dataprovider uses the read the hard -coded data


return type of Dataprovider-->Array (2D) object

 Dataprovider--> DataProvider helps with data-driven test cases that carry the same methods
  but can be run multiple times with different data sets.

@DataProvider (name = "name_of_dataprovider")
public Object[][] dpMethod() {
    return new Object [][] { values}
}

-----------------------------------------------------------------------------------------------------------
                ### Listeners ###

Listener is an interfaces that can track events and modify system behavior during the execution of Selenium tests.

  1.IRetryAnalyzer--> rerun the failed tests
  2.ITestListener-->allows us to implement methods to listen to test events, such as when a test case starts, finishes, fails, or skips
  3.IReporter-->report generation
  ----------------------------------------------------------------------------------------------------------------------------
                ### testng.xml ###
   <?xml version="1.0" encoding="UTF-8"?>
   <!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
   <suite name="Parallel Test Suite" thread-count="2" parallel="tests" >
   <test name="Parallel Test Chrome" >
   <classes>
   <class name="com.qa.testcases.ChromeTest"/>
   </classes>
   </test> <!-- Test -->

   <test name="Parallel Test Firefox" >
   <classes>
   <class name="com.qa.testcases.FirefoxTest"/>
   </classes>
   </test> <!-- Test -->

   <test name="Parallel Test Edge" >
   <classes>
   <class name="com.qa.testcases.EdgeTest"/>
   </classes>
   </test> <!-- Test -->
   </suite> <!-- Suite -->
   -----------------------------------------------------------------------------------------
     ### Exclude test method in testng ###

     <exclude> tag use in testng.xml file
     <exclude name=""/>
   ------------------------------------------------------------------------------------------
   1.What does ThreadPoolSize mean in TestNG? How does it work?
   -->
   ThreadPoolSize-->the threadpoolsize attribute tells Testng to create a thread pool to run
   the test method via multiple thread With thread pool it will greatly decrease the running
   time of test method

   ---------------------------------------------------------------------------------------------
