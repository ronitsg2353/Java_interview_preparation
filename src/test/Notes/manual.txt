----------------------------------------------------------------------------------------------
                ## Test Strategy vs Test Plan

1.Test Strategy-->scope,objective,methods,approach
A Test Strategy is a high-level document that outlines the approach, scope, objectives, and methods for testing a software application.
It provides a framework for planning and executing testing activities throughout the software development lifecycle.

2.Test Plan-->scope,objective,apporach,resource and schedule for the testing.
Test Plan is a document that outlines the objectives, scope, approach, resources, and schedule for a software testing effort.
It serves as a roadmap for testing activities and provides a comprehensive guide for testers and stakeholders involved in the testing process.


-----------------------------------------------------------------------------------
1.Level 0f testing-->
        1.unit testing
        2.Integration testing
        3.system testing
        4.user acceptance testing
--------------------------------------------------------------------------------------------
1.Test Bed--> a production mimic enviroment that use for testing with test data.

Exploratory testing-->unscripted strategy.Tester use his knowlegde,prior experience and abilities to check the developed build
Adhoc testing-->no documentation/no specific procedure.to find out the defect by random approach
Monkey testing-->testing technique-->in which provide random inputs to evalute the stability of application.
------------------------------------------------------------------------------------------------------
            ### Design technique ###
 1.Boundry value Analysis
 2.Equivalent class partitioning

 Both test comes under edge cases that reduces the number of test case while ensuring adequete coverage.

 1.Boundry value analysis-->
    Identify the boundry value (minimum and maximum values of the range)
    Test at boundry value just below and just above the boundaries.

 2.Equivalent Class Partitioning-->   (0 to 100-->50 is middle value)
 ECP divides input data into partitions or classes that are expected to exhibit similar behaviour.
       Identity valid and invalid equivalent classes.
       Choose one representative value from each class for testing

---------------------------------------------------------------------------------------------
                ### verification & validation ###

 1.verification-->verification means check the build as per requirement or not
 2.validation-->validation means build/software should meet client/end user requirements.

 -------------------------------------------------------------------------------------
1.AdHoc testing-->software testing without planned initial test case documentation
2.Exploratory testing-->software testing perform before testing based knowledge,experience & intitution
3.Monkey testing-->a technique provide random inputs and checking behaviour or see whether crash the application
4.Gorilla testing-->in depth testing of particular single feature of functionality tested it correctness & reliability.
5.Alpha testing-->aplha testing takes place within organization
6.Beta testing--->beta testing takes places in user's environment
7.black box testing-->without knowing the internal code
8.White box testing-->with knowledge of internal code
9.Grey box testing->combination black box  & white box

-------------------------------------------------------------------------------------------
story point-->follows fibonacci series

1 1 2 3 5

------------------------------------------------------------------------------------------
Priortiy and Severity-->

severity-->how impact of issue on product
priority-->how imp fix this issue
--------------------------------------------------------------------------------------
            ### Agile ceremonies ###
 1.daily standup-->what did you yesterday..planning to do today task
 2.sprint planning-->what work should have to complete within time period
 3.sprint review-->demo to stalkholder on end of sprint
 4.story grooming meeting-->
 5.sprint retrospective meeting->last day of sprint

 ---------------------------------------------------------------------------------------
Q if web application has "search" feature ,what functional test would you create to ensure it work correctly?
-->
TC1.valid search
Tc2.empty search
Tc3.special characters
Tc4.escape character or invalid character
Tc5.search case-insensitivity
Tc6.enter partial search
Tc7.check autosuggestion
Tc8.check for multi word are entered.eg.laptop charger
Tc9.verify appropriate msg dispalyed when no result are found
---
Q.Test the login modules of sample website("https://www.saucedemo.com/v1") with all possible scenarios.
1.valid login
2.invalid login(invalid username)
3.Invalid login(invalid password)
4.empty fields(both username and password)
5.empty username(only password entered)
6.empty passowrd(only username entered)
7.password length validation(too short or exceed allowed lenth)
8.case sensitivity-->mixing upper and lowercase
9.special character
10.login timeout
11.session expiry
12.cross site scripting-->using javascript or html tags username password




